% Chapter Template

\chapter{Conclusion} % Main chapter title

\label{Chapter6} % Change X to a consecutive number; for referencing this chapter elsewhere, use \cref{ChapterX}

%----------------------------------------------------------------------------------------
%	SECTION 1
%----------------------------------------------------------------------------------------

The two ML algorithms (MCC, SARSA) could not achieve any  meaningful learning success, or more precisely, the learned Q value function does only achive a 1\% better result than a randomly played card. \\

The fact that not all possible hand variations were played through could also have contributed to the poor performance. The RL needed more opportunities to learn all the variants. \\

\noindent
The considerations to encode the game states were not fully successful.

\begin{itemize}
    \item One possible reason is that "only" two actions are available (take, leave). However, it cannot be guaranteed that the action can be executed (e.g., a take action cannot have a card in hand to take the trick).
    \item The changing of the dealer (the winner of the last round plays the first card in the current round) leads to the fact that the actions do not reflect the actual state of the game because the player who deals can only partially judge whether an action (take/leave) is possible.
    \item If the desired action was impossible, a playable card was randomly selected. This should have been considered a learning termination (terminal).
\end{itemize} 


\noindent
The example of Easy 21 was not transversally for Jass, which allows more game states. It should be possible to consider more than two game state:
\begin{itemize}
    \item Consideration of trump suit
    \item Who plays the first card in a round (for the first and second players, there are two different strategies to learn).
    \item Does the player have the cards to decide if he can take or leave? Only if both possibilities exist can something be learned about the game strategy (take/leave).
\end{itemize}
